{"version":3,"sources":["extractProps.ts"],"names":["clipRules","evenodd","nonzero","propsAndStyles","props","style","Array","isArray","Object","assign","getMarker","marker","undefined","matched","match","idPattern","extractProps","ref","id","opacity","onLayout","clipPath","clipRule","display","mask","markerStart","markerMid","markerEnd","transform","testID","accessibilityLabel","accessible","extracted","inherited","length","propList","transformProps","matrix","name","String","Boolean","console","warn","extract","instance","withoutXY","x","y"],"mappings":"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","sourcesContent":["import extractFill from './extractFill';\nimport extractStroke from './extractStroke';\nimport { props2transform, transformToMatrix } from './extractTransform';\nimport extractResponder from './extractResponder';\nimport extractOpacity from './extractOpacity';\nimport { idPattern } from '../util';\nimport {\n  ClipProps,\n  extractedProps,\n  FillProps,\n  NumberProp,\n  ResponderProps,\n  StrokeProps,\n  TransformProps,\n} from './types';\n\nconst clipRules: { evenodd: number; nonzero: number } = {\n  evenodd: 0,\n  nonzero: 1,\n};\n\nexport function propsAndStyles(props: Object & { style?: [] | {} }) {\n  const { style } = props;\n  return !style\n    ? props\n    : {\n        ...(Array.isArray(style) ? Object.assign({}, ...style) : style),\n        ...props,\n      };\n}\n\nfunction getMarker(marker?: string) {\n  if (!marker) {\n    return undefined;\n  }\n  const matched = marker.match(idPattern);\n  return matched ? matched[1] : undefined;\n}\n\nexport default function extractProps(\n  props: {\n    id?: string;\n    mask?: string;\n    marker?: string;\n    markerStart?: string;\n    markerMid?: string;\n    markerEnd?: string;\n    clipPath?: string;\n    display?: string;\n    opacity?: NumberProp;\n    onLayout?: () => void;\n    transform?: number[] | string | TransformProps;\n    testID?: string;\n    accessibilityLabel?: string;\n    accessible?: boolean;\n  } & TransformProps &\n    ResponderProps &\n    StrokeProps &\n    FillProps &\n    ClipProps,\n  ref: Object,\n) {\n  const {\n    id,\n    opacity,\n    onLayout,\n    clipPath,\n    clipRule,\n    display,\n    mask,\n    marker,\n    markerStart = marker,\n    markerMid = marker,\n    markerEnd = marker,\n    transform,\n    testID,\n    accessibilityLabel,\n    accessible,\n  } = props;\n  const extracted: extractedProps = {};\n\n  const inherited: string[] = [];\n  extractResponder(extracted, props, ref);\n  extractFill(extracted, props, inherited);\n  extractStroke(extracted, props, inherited);\n\n  if (inherited.length) {\n    extracted.propList = inherited;\n  }\n\n  const transformProps = props2transform(props);\n  const matrix = transformToMatrix(transformProps, transform);\n  if (matrix !== null) {\n    extracted.matrix = matrix;\n  }\n\n  if (opacity != null) {\n    extracted.opacity = extractOpacity(opacity);\n  }\n\n  if (display != null) {\n    extracted.display = display === 'none' ? 'none' : undefined;\n  }\n\n  if (onLayout) {\n    extracted.onLayout = onLayout;\n  }\n\n  if (markerStart) {\n    extracted.markerStart = getMarker(markerStart);\n  }\n  if (markerMid) {\n    extracted.markerMid = getMarker(markerMid);\n  }\n  if (markerEnd) {\n    extracted.markerEnd = getMarker(markerEnd);\n  }\n\n  if (id) {\n    extracted.name = String(id);\n  }\n\n  if (testID) {\n    extracted.testID = String(testID);\n  }\n\n  if (accessibilityLabel) {\n    extracted.accessibilityLabel = String(accessibilityLabel);\n  }\n\n  if (accessible) {\n    extracted.accessible = Boolean(accessible);\n  }\n\n  if (clipRule) {\n    extracted.clipRule = clipRules[clipRule] === 0 ? 0 : 1;\n  }\n  if (clipPath) {\n    const matched = clipPath.match(idPattern);\n    if (matched) {\n      extracted.clipPath = matched[1];\n    } else {\n      console.warn(\n        'Invalid `clipPath` prop, expected a clipPath like \"#id\", but got: \"' +\n          clipPath +\n          '\"',\n      );\n    }\n  }\n\n  if (mask) {\n    const matched = mask.match(idPattern);\n\n    if (matched) {\n      extracted.mask = matched[1];\n    } else {\n      console.warn(\n        'Invalid `mask` prop, expected a mask like \"#id\", but got: \"' +\n          mask +\n          '\"',\n      );\n    }\n  }\n\n  return extracted;\n}\n\nexport function extract(instance: Object, props: Object & { style?: [] | {} }) {\n  return extractProps(propsAndStyles(props), instance);\n}\n\nexport function withoutXY(\n  instance: Object,\n  props: Object & { style?: [] | {} },\n) {\n  return extractProps({ ...propsAndStyles(props), x: null, y: null }, instance);\n}\n"]}